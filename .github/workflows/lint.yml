# Define name for workflow
name: Lint

# Add trigger. When push to this repo, this will run
on: push

# Setup the job when triggered. (This workflow will run sequentially.)
jobs:
  # Create 'run-lint' job
  run-lint:
    name: Lint code base
    # Job will run based on this runner. (Ubuntu 20.04 LTS)
    runs-on: ubuntu-20.04

    # Sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out this repo.
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.5
        with:
          go-version: '^1.17.6'
          stable: true
      - run: go version
      
      - name: Run golangci-lint
        # You may pin to the exact commit or the version.
        # uses: golangci/golangci-lint-action@5c56cd6c9dc07901af25baab6f2b0d9f3b7c3018
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
          # the token is used for fetching patch of a pull request to show only new issues
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # if set to true and the action runs on a pull request - the action outputs only newly found issues
          only-new-issues: false
          # if set to true then action uses pre-installed Go
          skip-go-installation: true
          # if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: false
          # if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: false

#       - name: Super-Linter
#         uses: github/super-linter@v4.8.7
#         env:
#           DEFAULT_BRANCH: main
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
